package ws2022.Client.ViewController;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.scene.shape.Circle;
import javafx.scene.text.Text;
import javafx.stage.Modality;
import javafx.stage.Stage;
import ws2022.Client.Logic.GenerateData;
import ws2022.Client.Model.Dice;
import ws2022.Client.Model.Disc;
import ws2022.Client.Model.GameManager;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;

public class BoardGameController {
    @FXML
    public GridPane boardgame;
    public Button myButton;
    public ImageView dice;
    public Pane pane;
    Button rollDice = new Button("Roll Dice");
    Button guessPicture = new Button("Guess Picture");
    @FXML
    private Text player1;
    @FXML
    private Text player2;

    @FXML
    public void initialize() throws FileNotFoundException {
        GenerateData.generateDisc(GameManager.myList);
        Collections.shuffle(GameManager.myList);
        int index = 0;
        for (int i = 0; i < 6; i++) {
            for (int j = 0; j < 4; j++) {
                String selectedImage = "/ws2022/Client/assets/FootballTheme/"
                        + GameManager.myList.get(index).getImage();
                Image image = new Image(this.getClass()
                        .getResource(selectedImage)
                        .toExternalForm());
                Circle clip = new Circle(50, 50, 45);
                ImageView imageView = new ImageView(image);

                // populate matrix
                imageView.setFitWidth(100);
                imageView.setFitHeight(100);
                imageView.setClip(clip);
                imageView.setUserData(GameManager.myList.get(index)); // change
                GameManager.myList.get(index).setCoordinate(i, j);
                imageView.setOnMouseClicked(event -> showDisc(event));
                boardgame.add(imageView, i, j);
                index++;

            }
        }
        // image of dice
        Image diceImage = new Image(this.getClass()
                .getResource("/ws2022/Client/assets/Dice/dice.png")
                .toExternalForm());
        dice.setImage(diceImage);
        dice.setFitWidth(100);
        dice.setFitHeight(100);
        player1.setText(GameManager.PLAYER1.getName() + ": " + GameManager.PLAYER1.getScore());
        player2.setText(GameManager.PLAYER2.getName() + ": " + GameManager.PLAYER2.getScore());
    }

    // random cover
    public void putCover() {
        String[] colorImage = { "blue.png", "green.png", "orange.png", "red.png", "yellow.png" };
        int count = 0;
        while (count < 5) {
            Random random = new Random();
            int x = random.nextInt(6);
            int y = random.nextInt(4);
            int index = y * 6 + x;
            if (GameManager.myList.get(index).checkCover())
                continue;
            GameManager.myList.get(index).setAnotherImage(colorImage[count]);
            count++;

            String selectedImage = "/ws2022/Client/assets/Covers/" + GameManager.myList.get(index).getImage();
            Image image = new Image(this.getClass()
                    .getResource(selectedImage)
                    .toExternalForm());
            Circle clip = new Circle(50, 50, 45);
            ImageView imageView = new ImageView(image);

            // populate matrix
            imageView.setFitWidth(100);
            imageView.setFitHeight(100);
            imageView.setClip(clip);
            boardgame.add(imageView, x, y);
        }

    }

    // click remeber all
    @FXML
    public void clickRememberAll() throws IOException {
        putCover();
        pane.getChildren().remove(myButton);
        rollDice.setPrefWidth(100);
        rollDice.setPrefHeight(50);
        rollDice.setLayoutX(800);
        rollDice.setLayoutY(342);
        rollDice.setOnAction(event -> {
            try {
                clickRollDice();
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        });
        pane.getChildren().add(rollDice);
    }

    public void clickRollDice() throws IOException {
        Dice diceObject = new Dice();
        String color = diceObject.rollDice();

        // display cover has been generated by roll dice
        String coverImage = "/ws2022/Client/assets/Covers/" + color + ".png";
        Image cover = new Image(this.getClass()
                .getResource(coverImage)
                .toExternalForm());
        dice.setImage(cover);
        dice.setFitWidth(100);
        dice.setFitHeight(100);

        // remove roll Dice button
        pane.getChildren().remove(rollDice);

        // add guess Picture button
        guessPicture.setPrefWidth(100);
        guessPicture.setPrefHeight(50);
        guessPicture.setLayoutX(800);
        guessPicture.setLayoutY(342);
        guessPicture.setOnAction(event -> {
            try {
                clickGuessPicture(event, color);
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        });
        pane.getChildren().add(guessPicture);
    }

    public void clickGuessPicture(ActionEvent event, String color) throws IOException {
        Stage popupwindow = new Stage();

        popupwindow.initModality(Modality.APPLICATION_MODAL);
        popupwindow.setTitle("This is a pop up window");

        Parent popUp = FXMLLoader.load(getClass().getResource("/ws2022/Client/ViewFx/" + "GuessPicture" + ".fxml"));
        Scene scene = new Scene(popUp);

        popupwindow.setScene(scene);

        popupwindow.showAndWait();
    }

    // show disc value when click on disc
    @FXML
    public void showDisc(MouseEvent event) {
        Node sourceComponent = (Node) event.getSource();
        Disc disc = (Disc) sourceComponent.getUserData();
        System.out.println(disc.getValue() + " and " + disc.getImage());
    }

}
